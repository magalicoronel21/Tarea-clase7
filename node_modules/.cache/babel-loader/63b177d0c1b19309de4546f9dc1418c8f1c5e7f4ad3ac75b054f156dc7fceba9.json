{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      apiTasks: [],\n      newTask: ''\n    };\n  },\n  mounted() {\n    this.fetchTasks();\n  },\n  methods: {\n    async fetchTasks() {\n      try {\n        const response = await fetch('https://dummyjson.com/todos');\n        const data = await response.json();\n        this.apiTasks = data.todos;\n      } catch (error) {\n        console.error('Error al cargar las tareas desde la API:', error);\n      }\n    },\n    addTask() {\n      if (this.newTask.trim()) {\n        this.apiTasks.push({\n          id: Date.now(),\n          todo: this.newTask\n        });\n        this.newTask = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","apiTasks","newTask","mounted","fetchTasks","methods","response","fetch","json","todos","error","console","addTask","trim","push","id","Date","now","todo"],"sources":["src/components/CombinedTasks.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>Vista Combinada de Tareas</h2>\r\n      <h3>Tareas desde la API</h3>\r\n      <ul>\r\n        <li v-for=\"task in apiTasks\" :key=\"task.id\">{{ task.todo }}</li>\r\n      </ul>\r\n  \r\n      <h3>Agregar Nueva Tarea</h3>\r\n      <form @submit.prevent=\"addTask\">\r\n        <input type=\"text\" v-model=\"newTask\" placeholder=\"Ingrese una tarea\" required />\r\n        <button type=\"submit\">Agregar</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        apiTasks: [],\r\n        newTask: ''\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchTasks();\r\n    },\r\n    methods: {\r\n      async fetchTasks() {\r\n        try {\r\n          const response = await fetch('https://dummyjson.com/todos');\r\n          const data = await response.json();\r\n          this.apiTasks = data.todos;\r\n        } catch (error) {\r\n          console.error('Error al cargar las tareas desde la API:', error);\r\n        }\r\n      },\r\n      addTask() {\r\n        if (this.newTask.trim()) {\r\n          this.apiTasks.push({ id: Date.now(), todo: this.newTask });\r\n          this.newTask = ''; \r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";AAiBA;EACAA,KAAA;IACA;MACAC,QAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACA,MAAAD,WAAA;MACA;QACA,MAAAE,QAAA,SAAAC,KAAA;QACA,MAAAP,IAAA,SAAAM,QAAA,CAAAE,IAAA;QACA,KAAAP,QAAA,GAAAD,IAAA,CAAAS,KAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,6CAAAA,KAAA;MACA;IACA;IACAE,QAAA;MACA,SAAAV,OAAA,CAAAW,IAAA;QACA,KAAAZ,QAAA,CAAAa,IAAA;UAAAC,EAAA,EAAAC,IAAA,CAAAC,GAAA;UAAAC,IAAA,OAAAhB;QAAA;QACA,KAAAA,OAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}